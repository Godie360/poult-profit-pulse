import apiClient from './apiClient';

export interface User {
  _id: string;
  fullName: string;
  email: string;
  phone: string;
  username: string;
  role: string;
  isWorker: boolean;
  isVet: boolean;
  lastLogin: string;
  createdAt: string;
  updatedAt: string;
}

export interface GenerateCodeRequest {
  isVet: boolean;
  isWorker: boolean;
  name: string;
}

export interface AccessCode {
  code: string;
  type: 'vet' | 'worker';
  name: string;
  expiresAt: string;
  used?: boolean;
  usedBy?: string;
  usedAt?: string;
}

const usersService = {
  /**
   * Get all users (only accessible to farmers)
   */
  getAllUsers: async (): Promise<User[]> => {
    const response = await apiClient.get<User[]>('/users');
    return response.data;
  },

  /**
   * Generate an access code for a vet or worker
   * @param data The data for generating the code
   */
  generateCode: async (data: GenerateCodeRequest): Promise<AccessCode> => {
    const response = await apiClient.post<AccessCode>('/users/generate-code', data);
    return response.data;
  },

  /**
   * Get all access codes generated by the current user
   */
  getAccessCodes: async (): Promise<AccessCode[]> => {
    const response = await apiClient.get<AccessCode[]>('/users/codes');
    return response.data;
  }
};

export default usersService;